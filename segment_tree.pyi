class PySegmentTree:
    @classmethod
    def len(self) -> int: ...
    def is_empty(self) -> bool: ...
    def container(self) -> list[int | None]: ...
    def query_min(self, ranges: list[tuple[int, int]]) -> list[int]: ...
    def query_max(self, ranges: list[tuple[int, int]]) -> list[int]: ...
    def query_sum(self, ranges: list[tuple[int, int]]) -> list[int]: ...
    def update_min(self, values_n_indexes: list[tuple[int, int]]) -> None: ...
    def update_max(self, values_n_indexes: list[tuple[int, int]]) -> None: ...
    def update_sum(self, values_n_indexes: list[tuple[int, int]]) -> None: ...

def build_min_tree(arr: list[int]) -> PySegmentTree: ...
def build_max_tree(arr: list[int]) -> PySegmentTree: ...
def build_sum_tree(arr: list[int]) -> PySegmentTree: ...
def tree_container_indexes_manager(tree_len: int) -> list[tuple[int, int] | None]: ...
